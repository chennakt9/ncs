{"version":3,"sources":["components/CommentsList.js","components/About.js","components/Login.js","components/Register.js","App.js","serviceWorker.js","index.js"],"names":["CommentsList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onReplyClickHandler","e","setState","curr_parent","target","id","form_inp","focus","curr_name","curr_comment","console","log","onChangeNameHandler","value","onChangeCommentHandler","showComments","keys","state","comments","map","key","comment","onSubmitHandler","preventDefault","newComment","comment_sender_name","parent_comment_id","axios","post","then","res","data","componentWillMount","parents","defaults","withCredentials","pid","margin","ind","_this2","i","length","dd","react_default","a","createElement","className","_id","style","marginLeft","date","align","type","onClick","prevState","objectSpread","push","recursiveFetch","_this3","get","_loop","comment1","_this4","onSubmit","placeholder","ref","el","onChange","name","rows","Component","About","Login","onChangeEmailHandler","email","onChangePasswordHandler","password","loginData","error","history","display","htmlFor","href","Register","onChangePassword2Handler","password2","registerData","App","BrowserRouter","Route","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iRAgOeA,cAxNb,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAChBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAcRQ,oBAAsB,SAACC,GAErBR,EAAKS,SAAS,CACZC,YAAYF,EAAEG,OAAOC,KAEvBZ,EAAKa,SAASC,QACdd,EAAKS,SAAS,CACZM,UAAU,GACVC,aAAa,KAGfC,QAAQC,IAAI,iBAAiBV,EAAEG,OAAOC,KA1BtBZ,EA8HlBmB,oBAAsB,SAACX,GACrBR,EAAKS,SAAS,CACZM,UAAWP,EAAEG,OAAOS,SAhINpB,EAsIlBqB,uBAAyB,SAACb,GAExBR,EAAKS,SAAS,CACZO,aAAcR,EAAEG,OAAOS,SAzITpB,EAiJlBsB,aAAe,WAEb,OAAQrB,OAAOsB,KAAKvB,EAAKwB,MAAMC,UAAUC,IAAK,SAAAC,GAC5C,OAAO3B,EAAKwB,MAAMC,SAASE,GAAKD,IAAI,SAACE,GACnC,OAAOA,OArJK5B,EA4JlB6B,gBAAkB,SAACrB,GACjBA,EAAEsB,iBACFb,QAAQC,IAAIlB,EAAKwB,MAAMT,WACvBE,QAAQC,IAAIlB,EAAKwB,MAAMR,cACvBC,QAAQC,IAAIlB,EAAKwB,MAAMd,aAGvB,IAAMqB,EAAa,CACjBC,oBAAqBhC,EAAKwB,MAAMT,UAChCa,QAAS5B,EAAKwB,MAAMR,aACpBiB,kBAAmBjC,EAAKwB,MAAMd,aAIN,KAAvBV,EAAKwB,MAAMT,WAA4C,KAA1Bf,EAAKwB,MAAMR,eAEzCkB,IAAMC,KAAK,sCAAuCJ,GACjDK,KAAK,SAAAC,GAAG,OAAIpB,QAAQC,IAAImB,EAAIC,QAE7BtC,EAAKuC,qBAGLvC,EAAKS,SAAS,CACZM,UAAU,GACVC,aAAa,GACbN,YAAY,QAnLhBV,EAAKwB,MAAQ,CACXgB,QAAQ,GACRF,KAAK,GACLb,SAAS,GACTV,UAAU,GACVC,aAAa,GACbN,YAAY,KAGdwB,IAAMO,SAASC,iBAAkB,EAXjB1C,8EA6BH2C,EAAIC,EAAOC,GAGxB,IAH4B,IAAAC,EAAA3C,KAGnB4C,EAAI,EAAGA,EAAI5C,KAAKqB,MAAMc,KAAKU,OAAQD,IACvC5C,KAAKqB,MAAMc,KAAKS,GAAGd,oBAAoBU,GAAI,WACtC,EAEN,IAAIM,EAEFC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBAAyB1B,IAAKmB,EAAKtB,MAAMc,KAAKS,GAAGO,IAAKC,MAAO,CAACC,WAAWZ,IACpFM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,MAAgCH,EAAAC,EAAAC,cAAA,SAAIN,EAAKtB,MAAMc,KAAKS,GAAGf,qBAAvD,OAAmFkB,EAAAC,EAAAC,cAAA,SAAIN,EAAKtB,MAAMc,KAAKS,GAAGU,OAC1GP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaP,EAAKtB,MAAMc,KAAKS,GAAGnB,SAC/CsB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcK,MAAM,SAAQR,EAAAC,EAAAC,cAAA,UAAQO,KAAK,SAASC,QAASd,EAAKvC,oBAAqB8C,UAAU,0BAA0BzC,GAAIkC,EAAKtB,MAAMc,KAAKS,GAAGO,KAApH,WAIjDR,EAAKrC,SAAS,SAAAoD,GAEZ,IAAIpC,EAAQxB,OAAA6D,EAAA,EAAA7D,CAAA,GAAO4D,EAAUpC,UAG7B,OAFAA,EAASoB,GAAKkB,KAAKd,GAEZ,CAACxB,cAGVqB,EAAKkB,eAAelB,EAAKtB,MAAMc,KAAKS,GAAGO,IAAIV,EAAO,GAAGC,GApBT,gDAgC9B,IAAAoB,EAAA9D,KAElB+B,IAAMgC,IAAI,kCAAkC9B,KAAK,SAAAC,GAE/C4B,EAAKxD,SAAS,CACZ6B,KAAKD,EAAIC,SAIVF,KAAK,WAENF,IAAMgC,IAAI,oCAAoC9B,KAAK,SAAAC,GAGrD4B,EAAKxD,SAAS,CACZ+B,QAAQH,EAAIC,SAIbF,KAAK,WACN,IADU,IAAA+B,EAAA,SACFpB,GAEN,IAAIqB,EAAWH,EAAKzC,MAAMgB,QAAQO,GAE9BE,EAEFC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBAAyB1B,IAAKyC,EAASd,IAAKC,MAAO,CAACC,WAAW,IAC1EN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,MAAgCH,EAAAC,EAAAC,cAAA,SAAIgB,EAASpC,qBAA7C,OAAyEkB,EAAAC,EAAAC,cAAA,SAAIgB,EAASX,OACtFP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAae,EAASxC,SACrCsB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcK,MAAM,SAAQR,EAAAC,EAAAC,cAAA,UAAQO,KAAK,SAASC,QAASK,EAAK1D,oBAAqB8C,UAAU,0BAA0BzC,GAAIwD,EAASd,KAA1G,WAIjDW,EAAKxD,SAAS,SAAAoD,GACZ,IAAIpC,EAAQxB,OAAA6D,EAAA,EAAA7D,CAAA,GAAO4D,EAAUpC,UAG7B,OAFAA,EAASsB,GAAG,CAACE,GAEN,CAACxB,eAjBJsB,EAAE,EAAEA,EAAEkB,EAAKzC,MAAMgB,QAAQQ,OAAOD,IAAIoB,EAApCpB,KAsBPX,KAAK,WAGN,IADA,IACSW,EAAI,EAAGA,EAAIkB,EAAKzC,MAAMgB,QAAQQ,OAAQD,IAC7CkB,EAAKD,eAAeC,EAAKzC,MAAMgB,QAAQO,GAAGO,IAAIV,GAAUG,GAI1D9B,QAAQC,IAAI+C,EAAKzC,MAAMgB,SACvBvB,QAAQC,IAAI+C,EAAKzC,MAAMc,MACvBrB,QAAQC,IAAI+C,EAAKzC,MAAMC,+CAuEhB,IAAA4C,EAAAlE,KAEP,OACE+C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACbH,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oCAEfH,EAAAC,EAAAC,cAAA,QAAMkB,SAAUnE,KAAK0B,iBACnBqB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOO,KAAK,OAAON,UAAU,eAAekB,YAAY,aAAaC,IAAK,SAACC,GAAMJ,EAAKxD,SAAW4D,GAAKC,SAAUvE,KAAKgB,oBAAqBC,MAAOjB,KAAKqB,MAAMT,aAE9JmC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAClBH,EAAAC,EAAAC,cAAA,YAAUuB,KAAK,kBAAiBtB,UAAU,eAAeqB,SAAUvE,KAAKkB,uBAAwBD,MAAOjB,KAAKqB,MAAMR,aAAcuD,YAAY,gBAAgBK,KAAK,OAE9J1B,EAAAC,EAAAC,cAAA,SAAOO,KAAK,SAASN,UAAU,kBAAkBjC,MAAM,aAMzD8B,EAAAC,EAAAC,cAAA,WACCjD,KAAKmB,uBAnNauD,aCSZC,0LARX,OACE5B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,gCAPYyB,cCKCE,cAEjB,SAAAA,EAAYhF,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4E,IACd/E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8E,GAAAzE,KAAAH,KAAMJ,KAWViF,qBAAuB,SAACxE,GACxBR,EAAKS,SAAS,CACZwE,MAAOzE,EAAEG,OAAOS,SAdApB,EAoBlBkF,wBAA0B,SAAC1E,GAC3BR,EAAKS,SAAS,CACV0E,SAAU3E,EAAEG,OAAOS,SAtBLpB,EA4BlB6B,gBAAkB,SAACrB,GACfA,EAAEsB,iBACFb,QAAQC,IAAIlB,EAAKwB,MAAM2D,UACvBlE,QAAQC,IAAIlB,EAAKwB,MAAMyD,OAGvB,IAAMG,EAAY,CACdH,MAAOjF,EAAKwB,MAAMyD,MAClBE,SAAUnF,EAAKwB,MAAM2D,UAIH,KAAnBnF,EAAKwB,MAAMyD,OAAoC,KAAtBjF,EAAKwB,MAAM2D,SAInCjD,IAAMC,KAAK,oCAAqCiD,GAC/ChD,KAAK,SAAAC,GACFpB,QAAQC,IAAImB,GACTA,EAAIC,KAAJ,MACCtC,EAAKS,SAAS,CACV4E,MAAM,wBAGVrF,EAAKD,MAAMuF,QAAQvB,KAAK,eAehC/D,EAAKS,SAAS,CACV4E,MAAM,kCAlEdrF,EAAKwB,MAAQ,CACXyD,MAAM,GACNE,SAAS,GACTE,MAAM,IAGRnD,IAAMO,SAASC,iBAAkB,EARnB1C,wEA0Ed,OACIkD,EAAAC,EAAAC,cAAA,WAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAmBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAA9C,UACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqBE,MAAO,CAACgC,QAAQpF,KAAKqB,MAAM6D,MAAM,QAAQ,SAE1ElF,KAAKqB,MAAM6D,OAEdnC,EAAAC,EAAAC,cAAA,QAAMkB,SAAUnE,KAAK0B,iBACjBqB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,SAAOoC,QAAQ,SAAf,SACAtC,EAAAC,EAAAC,cAAA,SACIO,KAAK,QACL/C,GAAG,QACH+D,KAAK,QACLtB,UAAU,eACVkB,YAAY,cACZG,SAAUvE,KAAK6E,qBACf5D,MAAOjB,KAAKqB,MAAMyD,SAGtB/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,SAAOoC,QAAQ,YAAf,YACAtC,EAAAC,EAAAC,cAAA,SACIO,KAAK,WACL/C,GAAG,WACH+D,KAAK,WACLtB,UAAU,eACVkB,YAAY,iBACZG,SAAUvE,KAAK+E,wBACf9D,MAAOjB,KAAKqB,MAAM2D,YAGtBjC,EAAAC,EAAAC,cAAA,UAAQO,KAAK,SAASN,UAAU,0BAAhC,UAEJH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,eACgBH,EAAAC,EAAAC,cAAA,KAAGqC,KAAK,aAAR,wBAnHOZ,aCJda,cAEjB,SAAAA,EAAY3F,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuF,IACd1F,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyF,GAAApF,KAAAH,KAAMJ,KAcNoB,oBAAsB,SAACX,GACnBR,EAAKS,SAAS,CACdkE,KAAMnE,EAAEG,OAAOS,SAjBLpB,EAuBdgF,qBAAuB,SAACxE,GACpBR,EAAKS,SAAS,CACdwE,MAAOzE,EAAEG,OAAOS,SAzBNpB,EA+BdkF,wBAA0B,SAAC1E,GACvBR,EAAKS,SAAS,CACV0E,SAAU3E,EAAEG,OAAOS,SAjCbpB,EAuCd2F,yBAA2B,SAACnF,GACxBR,EAAKS,SAAS,CACVmF,UAAWpF,EAAEG,OAAOS,SAzCdpB,EA+Cd6B,gBAAkB,SAACrB,GACfA,EAAEsB,iBACFb,QAAQC,IAAIlB,EAAKwB,OAGjB,IAAMqE,EAAe,CACjBlB,KAAK3E,EAAKwB,MAAMmD,KAChBM,MAAOjF,EAAKwB,MAAMyD,MAClBE,SAAUnF,EAAKwB,MAAM2D,SACrBS,UAAU5F,EAAKwB,MAAMoE,WAGJ,KAAlB5F,EAAKwB,MAAMmD,MAAgC,KAAnB3E,EAAKwB,MAAMyD,OAAoC,KAAtBjF,EAAKwB,MAAM2D,UAAwC,KAAvBnF,EAAKwB,MAAMoE,UAIvF1D,IAAMC,KAAK,uCAAwC0D,GAClDzD,KAAK,SAAAC,GACFpB,QAAQC,IAAImB,GACTA,EAAIC,KAAJ,QACCtC,EAAKD,MAAMuF,QAAQvB,KAAK,KAGxB/D,EAAKS,SAAS,CACV4E,MAAM,8BAgBlBrF,EAAKS,SAAS,CACV4E,MAAM,iCAtFlBrF,EAAKwB,MAAQ,CACXmD,KAAK,GACLM,MAAM,GACNE,SAAS,GACTS,UAAU,GACVP,MAAM,IAGRnD,IAAMO,SAASC,iBAAkB,EAVnB1C,wEA+Fd,OACIkD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAC3BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBADf,aAIAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqBE,MAAO,CAACgC,QAAQpF,KAAKqB,MAAM6D,MAAM,QAAQ,SAEtElF,KAAKqB,MAAM6D,OAIlBnC,EAAAC,EAAAC,cAAA,QAAMkB,SAAUnE,KAAK0B,iBACnBqB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOoC,QAAQ,QAAf,QACAtC,EAAAC,EAAAC,cAAA,SACEO,KAAK,OACL/C,GAAG,OACH+D,KAAK,OACLtB,UAAU,eACVkB,YAAY,aACZG,SAAUvE,KAAKgB,oBACfC,MAAOjB,KAAKqB,MAAMmD,QAGtBzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOoC,QAAQ,SAAf,SACAtC,EAAAC,EAAAC,cAAA,SACEO,KAAK,QACL/C,GAAG,QACH+D,KAAK,QACLtB,UAAU,eACVkB,YAAY,cACZG,SAAUvE,KAAK6E,qBACf5D,MAAOjB,KAAKqB,MAAMyD,SAGtB/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOoC,QAAQ,YAAf,YACAtC,EAAAC,EAAAC,cAAA,SACEO,KAAK,WACL/C,GAAG,WACH+D,KAAK,WACLtB,UAAU,eACVkB,YAAY,kBACZG,SAAUvE,KAAK+E,wBACf9D,MAAOjB,KAAKqB,MAAM2D,YAGtBjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOoC,QAAQ,aAAf,oBACAtC,EAAAC,EAAAC,cAAA,SACEO,KAAK,WACL/C,GAAG,YACH+D,KAAK,YACLtB,UAAU,eACVkB,YAAY,mBACZG,SAAUvE,KAAKwF,yBACfvE,MAAOjB,KAAKqB,MAAMoE,aAGtB1C,EAAAC,EAAAC,cAAA,UAAQO,KAAK,SAASN,UAAU,0BAAhC,aAIFH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,oBAA0CH,EAAAC,EAAAC,cAAA,KAAGqC,KAAK,KAAR,qBArKZZ,aC4CvBiB,mLApCX,OACE5C,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,KAEE7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oCAGbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACdH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWoC,KAAK,aAA7B,SAEEvC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWoC,KAAK,UAA7B,YAONvC,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWpB,IAEjC7B,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAOC,KAAK,SAASE,UAAWrB,IAChC5B,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAOC,KAAK,YAAYE,UAAWrG,IACnCoD,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAOC,KAAK,YAAYE,UAAWT,aAzB3Bb,aCEEuB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOxD,EAAAC,EAAAC,cAACuD,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5E,KAAK,SAAA6E,GACjCA,EAAaC","file":"static/js/main.618769e8.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios';\r\n// import {Link} from 'react-router-dom';\r\nimport '../index.css';\r\n\r\n\r\n\r\nclass CommentsList extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      parents:[],\r\n      data:[],\r\n      comments:{},\r\n      curr_name:\"\",\r\n      curr_comment:\"\",\r\n      curr_parent:\"0\"\r\n    };\r\n\r\n    axios.defaults.withCredentials = true;\r\n  }\r\n\r\n\r\n  onReplyClickHandler = (e) => {\r\n\r\n    this.setState({\r\n      curr_parent:e.target.id\r\n    });\r\n    this.form_inp.focus();\r\n    this.setState({\r\n      curr_name:\"\",\r\n      curr_comment:\"\"\r\n    })\r\n\r\n    console.log(\"I am clicked !\",e.target.id);\r\n  }\r\n\r\n  recursiveFetch(pid,margin,ind){\r\n    let found = 0;\r\n\r\n    for (let i = 0; i < this.state.data.length; i++) {\r\n      if(this.state.data[i].parent_comment_id===pid){\r\n        found=1;\r\n\r\n        let dd = (\r\n    \r\n          <div className=\"card card-default mb-4\" key={this.state.data[i]._id} style={{marginLeft:margin}}>\r\n              <div className=\"card-header\">By <b>{this.state.data[i].comment_sender_name}</b> on <i>{this.state.data[i].date}</i></div>\r\n              <div className=\"card-body\">{this.state.data[i].comment}</div>\r\n              <div className=\"card-footer\" align=\"right\"><button type=\"button\" onClick={this.onReplyClickHandler} className=\"btn btn-secondary reply\" id={this.state.data[i]._id}>Reply</button></div>\r\n          </div>\r\n        )\r\n\r\n        this.setState(prevState => {\r\n          // console.log(prevState.comments);\r\n          let comments = {...prevState.comments}\r\n          comments[ind].push(dd);\r\n          \r\n          return {comments}\r\n        });\r\n\r\n        this.recursiveFetch(this.state.data[i]._id,margin+48,ind);\r\n\r\n\r\n      }\r\n      \r\n    }\r\n\r\n    if(found===0){\r\n      return;\r\n    }\r\n  }\r\n\r\n  componentWillMount(){\r\n\r\n    axios.get('http://localhost:4000/comments').then(res => {\r\n\r\n      this.setState({\r\n        data:res.data\r\n      });\r\n    \r\n\r\n    }).then(()=>{\r\n\r\n      axios.get('http://localhost:4000/comments/0').then(res => {\r\n      // console.log(res.parents)\r\n\r\n    this.setState({\r\n      parents:res.data\r\n    });\r\n    \r\n\r\n  }).then(()=>{\r\n    for(let i=0;i<this.state.parents.length;i++){\r\n\r\n      let comment1 = this.state.parents[i];\r\n      \r\n      let dd = (\r\n    \r\n        <div className=\"card card-default mb-4\" key={comment1._id} style={{marginLeft:0}}>\r\n            <div className=\"card-header\">By <b>{comment1.comment_sender_name}</b> on <i>{comment1.date}</i></div>\r\n            <div className=\"card-body\">{comment1.comment}</div>\r\n            <div className=\"card-footer\" align=\"right\"><button type=\"button\" onClick={this.onReplyClickHandler} className=\"btn btn-secondary reply\" id={comment1._id}>Reply</button></div>\r\n\t      </div>\r\n      )\r\n\r\n      this.setState(prevState => {\r\n        let comments = {...prevState.comments}\r\n        comments[i]=[dd];\r\n        \r\n        return {comments}\r\n      });\r\n\r\n    }\r\n    // console.log(this.state.parents);\r\n  }).then(()=>{\r\n\r\n    let margin = 0;\r\n    for (let i = 0; i < this.state.parents.length; i++) {\r\n      this.recursiveFetch(this.state.parents[i]._id,margin+48,i);\r\n      \r\n    }\r\n\r\n    console.log(this.state.parents);\r\n    console.log(this.state.data);\r\n    console.log(this.state.comments);\r\n\r\n  })\r\n      \r\n    })\r\n\r\n  }\r\n\r\n\r\n  onChangeNameHandler = (e) => {\r\n    this.setState({\r\n      curr_name: e.target.value\r\n    })\r\n      \r\n    // console.log(this.state.curr_name);  \r\n  }\r\n\r\n  onChangeCommentHandler = (e) => {\r\n\r\n    this.setState({\r\n      curr_comment: e.target.value\r\n    })\r\n      \r\n    // console.log(this.state.curr_comment);\r\n\r\n  }\r\n\r\n\r\n  showComments = () => {\r\n\r\n    return (Object.keys(this.state.comments).map( key => {\r\n      return this.state.comments[key].map((comment) =>{\r\n        return comment\r\n      })\r\n\r\n    }));\r\n\r\n  }\r\n  \r\n  onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(this.state.curr_name);\r\n    console.log(this.state.curr_comment);\r\n    console.log(this.state.curr_parent);\r\n\r\n    //For posting Data\r\n    const newComment = {\r\n      comment_sender_name: this.state.curr_name,\r\n      comment: this.state.curr_comment,\r\n      parent_comment_id: this.state.curr_parent,\r\n\r\n    }\r\n\r\n    if(this.state.curr_name!==\"\" && this.state.curr_comment!==\"\"){\r\n\r\n      axios.post('http://localhost:4000/comments/add/', newComment)\r\n      .then(res => console.log(res.data));\r\n\r\n      this.componentWillMount();\r\n\r\n      //After Adding into the database\r\n      this.setState({\r\n        curr_name:\"\",\r\n        curr_comment:\"\",\r\n        curr_parent:\"0\"\r\n      });\r\n\r\n    }\r\n    \r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div className=\"p-4 m-4 border border-light\">\r\n        <br></br>\r\n       \r\n        <div className=\"shadow p-3 mb-5 bg-white rounded\">\r\n\r\n        <form onSubmit={this.onSubmitHandler}>\r\n          <div className=\"form-group\" >\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"Enter Name\" ref={(el)=>{this.form_inp = el}} onChange={this.onChangeNameHandler} value={this.state.curr_name}/>\r\n          </div>\r\n          <div className=\"form-group\">\r\n\t\t\t\t\t\t\t<textarea name=\"comment_content\"className=\"form-control\" onChange={this.onChangeCommentHandler} value={this.state.curr_comment} placeholder=\"Enter Comment\" rows=\"5\"></textarea>\r\n\t\t\t\t\t\t</div>\r\n          <input type=\"submit\" className=\"btn btn-primary\" value=\"submit\"/>\r\n        </form>\r\n\r\n        </div> \r\n        \r\n\r\n        <br/>\r\n        {this.showComments()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CommentsList\r\n","import React, { Component } from 'react'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass About extends Component {\r\n\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>About Page</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default About\r\n","import React, { Component } from 'react'\r\n\r\nimport axios from 'axios';\r\n\r\n// import {Link} from 'react-router-dom';\r\nimport '../index.css';\r\n\r\n\r\nexport default class Login extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          email:\"\",\r\n          password:\"\",\r\n          error:\"\"\r\n        };\r\n\r\n        axios.defaults.withCredentials = true;\r\n    \r\n      }\r\n\r\n    onChangeEmailHandler = (e) => {\r\n    this.setState({\r\n      email: e.target.value\r\n    })\r\n      \r\n    // console.log(this.state.curr_name);  \r\n    }\r\n\r\n    onChangePasswordHandler = (e) => {\r\n    this.setState({\r\n        password: e.target.value\r\n      })\r\n        \r\n      // console.log(this.state.curr_name);\r\n    }\r\n    \r\n    onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state.password);\r\n        console.log(this.state.email);\r\n\r\n        //For posting Data\r\n        const loginData = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n    \r\n        }\r\n  \r\n        if(this.state.email!==\"\" && this.state.password!==\"\"){\r\n            \r\n           \r\n\r\n            axios.post('http://localhost:4000/users/login', loginData)\r\n            .then(res => {\r\n                console.log(res);\r\n                if(res.data[\"error\"]){\r\n                    this.setState({\r\n                        error:\"Error logging in...\"\r\n                    });\r\n                }else{\r\n                    this.props.history.push('/comments');\r\n                }\r\n                \r\n                \r\n                }\r\n            );\r\n    \r\n    \r\n            //After Adding into the database\r\n            // this.setState({\r\n            // name:\"\",\r\n            // password:\"\"\r\n            // });\r\n    \r\n        }else{\r\n            this.setState({\r\n                error:\"All the fields are required.\"\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n\r\n        <div className=\"row mt-5\">\r\n        <div className=\"col-md-6 m-auto\">\r\n            <div className=\"card card-body\">\r\n            <h1 className=\"text-center mb-3\"><i className=\"fas fa-sign-in-alt\"></i> Login</h1>\r\n            <div className=\"alert alert-danger\" style={{display:this.state.error?\"block\":'none'}}>\r\n              \r\n              {this.state.error}\r\n          </div>\r\n            <form onSubmit={this.onSubmitHandler}>\r\n                <div className=\"form-group\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter Email\"\r\n                    onChange={this.onChangeEmailHandler} \r\n                    value={this.state.email}\r\n                />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter Password\"\r\n                    onChange={this.onChangePasswordHandler}\r\n                    value={this.state.password}\r\n                />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-info btn-block\">Login</button>\r\n            </form>\r\n            <p className=\"lead mt-4\">\r\n                No Account? <a href=\"/register\">Register</a>\r\n            </p>\r\n            </div>\r\n        </div>\r\n        </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport axios from 'axios';\r\n\r\nexport default class Register extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          name:\"\",\r\n          email:\"\",\r\n          password:\"\",\r\n          password2:\"\",\r\n          error:\"\"\r\n        };\r\n\r\n        axios.defaults.withCredentials = true;\r\n    \r\n      }\r\n      \r\n\r\n        onChangeNameHandler = (e) => {\r\n            this.setState({\r\n            name: e.target.value\r\n            })\r\n            \r\n            // console.log(this.state.curr_name);  \r\n            }\r\n\r\n        onChangeEmailHandler = (e) => {\r\n            this.setState({\r\n            email: e.target.value\r\n            })\r\n            \r\n            // console.log(this.state.curr_name);  \r\n            }\r\n    \r\n        onChangePasswordHandler = (e) => {\r\n            this.setState({\r\n                password: e.target.value\r\n            })\r\n                \r\n            // console.log(this.state.curr_name);\r\n            }\r\n\r\n        onChangePassword2Handler = (e) => {\r\n            this.setState({\r\n                password2: e.target.value\r\n              })\r\n                \r\n              // console.log(this.state.curr_name);\r\n            }\r\n        \r\n        onSubmitHandler = (e) => {\r\n            e.preventDefault();\r\n            console.log(this.state);\r\n    \r\n            // For posting Data\r\n            const registerData = {\r\n                name:this.state.name,\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                password2:this.state.password2\r\n            }\r\n      \r\n            if(this.state.name!==\"\" && this.state.email!==\"\" && this.state.password!==\"\" && this.state.password2!==\"\"){\r\n                \r\n               \r\n    \r\n                axios.post('http://localhost:4000/users/register', registerData)\r\n                .then(res => {\r\n                    console.log(res);\r\n                    if(res.data[\"message\"]){\r\n                        this.props.history.push('/');\r\n                        \r\n                    }else{\r\n                        this.setState({\r\n                            error:\"Error registering in...\"\r\n                        });\r\n                    }\r\n                    \r\n                    \r\n                    }\r\n                );\r\n        \r\n        \r\n                //After Adding into the database\r\n                // this.setState({\r\n                // name:\"\",\r\n                // password:\"\"\r\n                // });\r\n        \r\n            }else{\r\n                this.setState({\r\n                    error:\"All the fields are required\"\r\n                })\r\n                \r\n            }\r\n        }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"row mt-5\">\r\n    <div className=\"col-md-6 m-auto\">\r\n      <div className=\"card card-body\">\r\n        <h1 className=\"text-center mb-3\">\r\n          <i className=\"fas fa-user-plus\"></i> Register\r\n        </h1>\r\n        \r\n        <div className=\"alert alert-danger\" style={{display:this.state.error?\"block\":'none'}}>\r\n              \r\n              {this.state.error}\r\n          </div>\r\n          \r\n       \r\n        <form onSubmit={this.onSubmitHandler}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">Name</label>\r\n            <input\r\n              type=\"name\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              className=\"form-control\"\r\n              placeholder=\"Enter Name\"\r\n              onChange={this.onChangeNameHandler}\r\n              value={this.state.name}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              className=\"form-control\"\r\n              placeholder=\"Enter Email\"\r\n              onChange={this.onChangeEmailHandler}\r\n              value={this.state.email}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              className=\"form-control\"\r\n              placeholder=\"Create Password\"\r\n              onChange={this.onChangePasswordHandler}\r\n              value={this.state.password}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password2\">Confirm Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password2\"\r\n              name=\"password2\"\r\n              className=\"form-control\"\r\n              placeholder=\"Confirm Password\"\r\n              onChange={this.onChangePassword2Handler}\r\n              value={this.state.password2}\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-info btn-block\">\r\n            Register\r\n          </button>\r\n        </form>\r\n        <p className=\"lead mt-4\">Have An Account? <a href=\"/\">Login</a></p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport CommentsList from './components/CommentsList';\n\nimport About from './components/About';\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Login from './components/Login';\nimport Register from './components/Register';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n\n        <div className=\"container\">\n          <nav className=\"navbar navbar-expand-sm bg-light\">\n\n            \n            <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"/comments\">Home</a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"/about\">About</a>\n              </li>\n              \n            </ul>\n\n          </nav>\n\n          <Route path=\"/\" exact component={Login} ></Route>\n          \n          <Route path=\"/about\" component={About} ></Route>\n          <Route path=\"/comments\" component={CommentsList} ></Route>\n          <Route path=\"/register\" component={Register} ></Route>\n        </div >\n\n\n\n\n\n      </Router>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}